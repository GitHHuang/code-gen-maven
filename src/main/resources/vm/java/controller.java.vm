package ${packageName}.web.rest;

import ${packageName}.common.PageDataInfo;
import ${packageName}.common.PageQuery;
import ${packageName}.common.Response;
import ${packageName}.pojo.entity.${ClassName};
import ${packageName}.service.I${ClassName}Service;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import lombok.AllArgsConstructor;
import org.springframework.web.bind.annotation.*;

import javax.validation.constraints.NotBlank;
import javax.websocket.server.PathParam;
import java.util.List;


/**
 * ${functionName}Controller
 * 
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${className}")
@AllArgsConstructor
@Api("${functionName}管理")
public class ${ClassName}Controller {

    private final I${ClassName}Service ${className}Service;

    @GetMapping("/list")
    @ApiOperation(value = "查询${functionName}列表")
    public Response<List<${ClassName}>> list${ClassName}(@RequestParam @NotBlank(message = "参数不能为空") String param) {
        List<${ClassName}> ${className}List = ${className}Service.list();
        return Response.success(${className}List);
    }

    @GetMapping("/page")
    @ApiOperation(value = "分页查询${functionName}列表")
    public Response<Page<${ClassName}>> page${ClassName}(PageQuery pageParam) {
        PageDataInfo<${ClassName}> ${className}Page = ${className}Service.page${ClassName}(pageParam);
        return Response.success(${className}Page);
    }

    @PostMapping("/save")
    @ApiOperation("保存${functionName}信息")
    public Response<${ClassName}> save${ClassName}(@RequestBody ${ClassName} ${className}) {
        ${className}Service.saveOrUpdate(${className});
        return Response.success(${className});
    }

    @PostMapping("/info/{${pkColumn.javaField}}")
    @ApiOperation("查询${functionName}详情")
    public Response<${ClassName}> get(@ApiParam(value = "${functionName}表id") @PathParam(value = "${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}) {
        return Response.success(${className}Service.getById(${pkColumn.javaField}));
    }

    @PostMapping("/del/{${pkColumn.javaField}}")
    @ApiOperation("删除${functionName}信息")
    public Response<String> delete(@ApiParam(value = "${functionName}表id") @PathParam(value = "${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}) {
        ${className}Service.removeById(${pkColumn.javaField});
        return Response.success("操作成功");
    }

}
