<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${packageName}.pojo.entity.${ClassName}Mapper">
    
    <resultMap id="${ClassName}Result" type="${packageName}.pojo.entity.${ClassName}">
        #foreach ($column in $columns)
        #if($column.isPk==1)
        <id property="${column.javaField}"    column="${column.columnName.toLowerCase()}"    />
        #else
        <result property="${column.javaField}"    column="${column.columnName.toLowerCase()}"    />
        #end
        #end
    </resultMap>

    <sql id="column_sql">
        #foreach($column in $columns)
        ${tableName}.$column.columnName.toLowerCase()#if($foreach.count != $columns.size()),#end
        #end
    </sql>

    <sql id="whereClause_sql">
    #foreach($column in $columns)
    #set($queryType=$column.queryType)
    #set($javaField=$column.javaField)
    #set($javaType=$column.javaType)
    #set($columnName=$column.columnName.toLowerCase())
    #if($column.query)
    #if($column.queryType == "LIKE")
        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end"> and ${tableName}.$columnName like concat('%', #{$javaField}, '%')</if>
    #else
        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">and ${tableName}.$columnName = #{$javaField}</if>
    #end
    #end
#end
    </sql>

    <select id="select" parameterType="${packageName}.pojo.entity.${ClassName}" resultMap="${ClassName}Result">
        select
        <include refid="column_sql"/>
        from ${tableName}
        <where>
            <include refid="whereClause_sql"/>
        </where>
    </select>

    <select id="selectByID" parameterType="String" resultMap="${ClassName}Result">
        select
        <include refid="column_sql"/>
        from ${tableName}
        where ${tableName}.${pkColumn.columnName.toLowerCase()} = #{${pkColumn.javaField}}
    </select>

    <select id="selectByPage" parameterType="${packageName}.pojo.entity.${ClassName}" resultMap="${ClassName}Result">
        select
        <include refid="column_sql"/>
        from ${tableName}
        <where>
            <include refid="whereClause_sql"/>
        </where>
    </select>

    <select id="selectAll" resultMap="${ClassName}Result">
        select
        <include refid="column_sql"/>
        from ${tableName}
    </select>

    <insert id="insert" parameterType="${packageName}.pojo.entity.${ClassName}" useGeneratedKeys="true" keyProperty="$pkColumn.javaField">
        insert into ${tableName}(
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #foreach($column in $columns)
            #if($column.columnName != $pkColumn.columnName || !$pkColumn.increment)
                <if test="$column.javaField != null#if($column.javaType == 'String' && $column.required) and $column.javaField != ''#end">$column.columnName.toLowerCase(),</if>
            #end
            #end
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #foreach($column in $columns)
            #if($column.columnName != $pkColumn.columnName || !$pkColumn.increment)
                <if test="$column.javaField != null#if($column.javaType == 'String' && $column.required) and $column.javaField != ''#end">#{$column.javaField},</if>
            #end
            #end
        </trim>
    </insert>

    <insert id="insertBatch" parameterType="list">
        insert into ${tableName}
        (#foreach($column in $columns)$column.columnName.toLowerCase()#if($foreach.count != $columns.size()),#end#end)
        <foreach collection="list" item="entity" index="index" separator="union all">
            select
            #foreach($column in $columns)
            #{entity.$column.javaField}#if($foreach.count != $columns.size()),#end
            #end
            from dual
        </foreach>
    </insert>

    <select id="count" parameterType="${packageName}.pojo.entity.${ClassName}" resultType="int">
        select count(*) from ${tableName}
        <where>
            <include refid="whereClause_sql"/>
        </where>
    </select>

    <update id="update" parameterType="${packageName}.pojo.entity.${ClassName}">
        update ${tableName}
        <trim prefix="SET" suffixOverrides=",">
            #foreach($column in $columns)
                #if($column.columnName != $pkColumn.columnName)
                    <if test="$column.javaField != null#if($column.javaType == 'String' && $column.required) and $column.javaField != ''#end">$column.columnName.toLowerCase() = #{$column.javaField},</if>
                #end
            #end
        </trim>
        where ${pkColumn.columnName.toLowerCase()} = #{${pkColumn.javaField}}
    </update>

    <delete id="delete" parameterType="com.chinacreator.hosp.pojo.entity.CrfEvent">
        delete from ${tableName} where 1 = 1 and ${pkColumn.columnName.toLowerCase()} = #{${pkColumn.javaField}}
    </delete>

    <delete id="deleteBatch" parameterType="List">
        delete from ${tableName} where ${pkColumn.columnName.toLowerCase()} in
        <foreach item="entity" index="index" collection="list" open="(" close=")">
            <if test="index&gt;999 and index%1000==0">) or id in(</if>
            <choose>
                <when test="@com.chinacreator.c2.dao.util.EntityBeanUtil@isEntityObj(entity)">#{entity.id}</when>
                <otherwise>#{entity}</otherwise>
            </choose>
            <if test="index%1000!=999 and index&lt;list.size()-1">,</if>
        </foreach>
    </delete>

    <delete id="delete${ClassName}Logic" parameterType="String">
        update ${tableName}
        set deleted = 1
        where ${pkColumn.columnName.toLowerCase()} = #{${pkColumn.javaField}}
    </delete>

    <delete id="deleteBatch${ClassName}Logic" parameterType="String">
        update ${tableName} set deleted = 1 where ${pkColumn.columnName.toLowerCase()} in
        <foreach collection="list" item="${pkColumn.javaField}" open="(" separator="," close=")">
            #{${pkColumn.javaField}}
        </foreach>
    </delete>
</mapper>